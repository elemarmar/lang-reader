{"version":3,"sources":["components/NavMenu/NavMenu.module.css","components/Home/NewCopiedText/NewCopiedText.module.css","components/Home/LangControls/LangControls.module.css","assets/images/logo.jpg","components/Home/NewText/NewText.js","components/Home/NewCopiedText/NewCopiedText.js","components/Home/LangControls/LangControls.js","components/Home/Home.js","components/Word/Word.js","components/WordsText/WordsText.js","components/StudyText/StudyText.js","components/NavMenu/NavMenu.js","containers/App/App.js","index.js"],"names":["module","exports","NewText","props","className","method","action","id","type","name","onChange","onChangeHandler","onClick","onClickHandler","classes","NewCopiedText","htmlFor","Instructions","CopiedTextArea","rows","cols","changed","value","textValue","LangControls","ev","selectTargetLang","target","Home","textMethod","isUpload","onTextChangeHandler","StudyText","content","data-p","clicked","word","translation","WordsText","data","map","index","key","onClickHandle","translations","innerHTML","state","updatedTranslations","setState","getTranslationsApi","targetLang","lastClickedWord","axios","get","then","response","responseData","translatedText","bind","this","React","Component","NavMenu","activeClassName","active","MenuLink","to","exact","App","FormData","append","selectedFile","post","res","console","log","statusText","forceUpdate","copiedText","lang","changeTextMethodToCopy","changeTextMethodToUpload","nativeLang","event","files","loaded","src","logo","path","render","uploadMethodClick","copyMethodClick","text","textArray","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb98e90e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavMenu\":\"NavMenu_NavMenu__2I01v\",\"MenuLink\":\"NavMenu_MenuLink__1Oa6J\",\"active\":\"NavMenu_active__19miG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Instructions\":\"NewCopiedText_Instructions__RsLGx\",\"CopiedTextArea\":\"NewCopiedText_CopiedTextArea__3iWLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LangControls\":\"LangControls_LangControls__3B6lq\"};","module.exports = __webpack_public_path__ + \"static/media/logo.45bd297c.jpg\";","import React from 'react';\nimport './NewText.css';\n\nconst NewText = (props) => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <form method=\"post\" action=\"#\" id=\"#\">\n                        <div className=\"form-group files\">\n                            <label>Upload Your File </label>\n                             <input type=\"file\" \n                                className=\"form-control\" \n                                name=\"file\"\n                                onChange={props.onChangeHandler}></input>\n                         </div>\n                         <button \n                            type=\"button\" \n                            className=\"btn btn-success btn-block\" \n                            onClick={props.onClickHandler}>\n                            Upload\n                        </button> \n                    </form>    \n                </div>\n            </div>\n        </div>);\n}\n\nexport default NewText;","import React from 'react';\nimport classes from './NewCopiedText.module.css';\n\nconst NewText = (props) => {\n\n    return (\n        <form className={classes.NewCopiedText}>\n            <label htmlFor=\"copiedText\" className={classes.Instructions}>Paste Your Text </label>\n            <textarea id=\"copiedText\" name=\"copiedText\"\n                      className={classes.CopiedTextArea}\n                      rows=\"5\" cols=\"33\"\n                      onChange={props.changed}\n                      value={props.textValue}\n                      />\n            <button \n                type=\"button\" \n                onClick={props.onClickHandler}>\n                Upload\n            </button> \n        </form>);\n}\n\nexport default NewText;","import React from 'react';\nimport classes from './LangControls.module.css';\n\nconst LangControls = (props) => {\n  const handleChange = (ev) => {\n    props.selectTargetLang(ev.target.value);\n  };\n  return (\n    <select className={classes.LangControls} onChange={handleChange}>\n      <option value=''>--Select target language--</option>\n      <option value='es'>Spanish</option>\n      <option value='de'>German</option>\n      <option value='fr'>French</option>\n      <option value='it'>Italian</option>\n    </select>\n  );\n};\n\nexport default LangControls;\n","import React from 'react';\nimport NewText from './NewText/NewText';\nimport NewCopiedText from './NewCopiedText/NewCopiedText';\nimport LangControls from './LangControls/LangControls';\n\n// import classes from './Home.module.css';\n\nconst Home = (props) => {\n  let textMethod = (\n    <NewText\n      onChangeHandler={props.onChangeHandler}\n      onClickHandler={props.onClickHandler}\n    />\n  );\n  if (!props.isUpload) {\n    textMethod = (\n      <NewCopiedText\n        onClickHandler={props.onClickHandler}\n        changed={props.onTextChangeHandler}\n        textValue={props.textValue}\n      />\n    );\n  }\n\n  return (\n    <div>\n      {textMethod}\n      <LangControls selectTargetLang={props.selectTargetLang} />\n      {/* <button\n        type='button'\n        className={classes.UploadBtn}\n        onClick={props.uploadMethodClick}\n      ></button> */}\n      {/* <button \n                type=\"button\"\n                onClick={props.copyMethodClick}\n                className={classes.CopyBtn}>\n            </button> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport './Word.css';\n\nconst StudyText = (props) => {\n  let content = (\n    <span className='Word' data-p={props.id} onClick={props.clicked}>\n      {props.word}\n    </span>\n  );\n\n  if (props.translation) {\n    content = (\n      <div className='WordTranslated'>\n        <span className='translation'>{props.translation}</span>\n        <span\n          className='Word original'\n          data-p={props.id}\n          onClick={props.clicked}\n        >\n          {props.word}\n        </span>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nexport default StudyText;\n","import React from 'react';\nimport Word from '../Word/Word';\n\n\nconst WordsText = ( props ) => {\n    \n    return ( props.data.map((word, index) => {\n            return (\n              <Word\n                id={index}\n                key={index}\n                clicked={props.onClickHandle}\n                word={word}\n                translation={props.translations[word]}\n              />\n            );\n          })\n    );\n}\n\n\nexport default WordsText;","import React from 'react';\nimport WordsText from '../WordsText/WordsText';\nimport axios from 'axios';\nimport './StudyText.css';\n\nclass StudyText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ['This', 'is', 'an', 'important', 'sentence'],\n      translations: {},\n    };\n    this.onClickHandle = this.onClickHandle.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('data.json').then((response) => {\n      this.setState({\n        data: response.data,\n      });\n    });\n  }\n\n  onClickHandle = (ev) => {\n    const target = ev.target;\n    const word = target.innerHTML;\n    if (!this.state.translations[word]) {\n      this.getTranslationsApi(word, this.props.targetLang);\n    } else {\n      const updatedTranslations = this.state.translations;\n      updatedTranslations[word] = '';\n      this.setState({\n        translations: updatedTranslations,\n      });\n      // this.setState({\n      //   translations: {\n      //     [word]: ''\n      //   }\n      // })\n    }\n  };\n\n  getTranslationsApi = (word, target) => {\n    let lastClickedWord = word;\n    axios\n      .get(\n        `https://api.mymemory.translated.net/get?q=${word}&langpair=${target}|en`\n      )\n      .then((response) => {\n        if (lastClickedWord === word) {\n          const updatedTranslations = this.state.translations;\n          updatedTranslations[word] = response.data.responseData.translatedText;\n          this.setState({\n            translations: updatedTranslations,\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className='content'>\n        <WordsText\n          data={this.state.data}\n          translations={this.state.translations}\n          onClickHandle={this.onClickHandle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StudyText;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavMenu.module.css';\n\nconst NavMenu = (props) => {\n  return (\n    <nav>\n      <ul className={classes.NavMenu}>\n        <li>\n          <NavLink\n            activeClassName={classes.active}\n            className={classes.MenuLink}\n            to='/'\n            exact\n          >\n            <i className='fas fa-home'></i>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={classes.active}\n            className={classes.MenuLink}\n            to='/study'\n          >\n            <i className='fas fa-book-reader'></i>\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavMenu;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Home from '../../components/Home/Home';\nimport StudyText from '../../components/StudyText/StudyText';\nimport NavMenu from '../../components/NavMenu/NavMenu';\n\nimport logo from '../../assets/images/logo.jpg';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      isUpload: true,\n      targetLang: '',\n      nativeLang: '',\n      copiedText: '',\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onTextChangeHandler = this.onTextChangeHandler.bind(this);\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.changeTextMethodToUpload = this.changeTextMethodToUpload.bind(this);\n    this.changeTextMethodToCopy = this.changeTextMethodToCopy.bind(this);\n    this.selectTargetLang = this.selectTargetLang.bind(this);\n  }\n\n  onChangeHandler(event) {\n    console.log(event.target.files[0]);\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0,\n    });\n  }\n\n  onTextChangeHandler(event) {\n    this.setState({\n      copiedText: event.target.value,\n    });\n  }\n\n  onClickHandler = () => {\n    const data = new FormData();\n\n    if (this.state.isUpload) {\n      data.append('file', this.state.selectedFile);\n      axios\n        .post('http://localhost:8000/upload', data, {\n          // receive two parameter endpoint url ,form data\n        })\n        .then((res) => {\n          // then print response status\n          console.log(res.statusText);\n          this.forceUpdate();\n        });\n    } else {\n      data.append('copiedtext', this.state.copiedText);\n      axios.post('http://localhost:8000/upload', data, {}).then((res) => {\n        console.log(res.statusText);\n        this.forceUpdate();\n      });\n    }\n  };\n\n  selectTargetLang = (lang) => {\n    this.setState({\n      targetLang: lang,\n    });\n  };\n\n  changeTextMethodToCopy = () => {\n    this.setState({ isUpload: false });\n  };\n\n  changeTextMethodToUpload = () => {\n    this.setState({ isUpload: true });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>\n          <img className='App-logo' src={logo} />\n        </h1>\n        <NavMenu />\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={(props) => (\n              <Home\n                onChangeHandler={this.onChangeHandler}\n                onTextChangeHandler={this.onTextChangeHandler}\n                onClickHandler={this.onClickHandler}\n                isUpload={this.state.isUpload}\n                textValue={this.state.copiedText}\n                uploadMethodClick={this.changeTextMethodToUpload}\n                copyMethodClick={this.changeTextMethodToCopy}\n                selectTargetLang={this.selectTargetLang}\n              />\n            )}\n          />\n          <Route\n            path='/study'\n            render={(props) => (\n              <StudyText\n                text={this.state.textArray}\n                targetLang={this.state.targetLang}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}